HOMEWORK 5

	1)

[num,txt] = xlsread('students.csv.xlsx','Sheet2','B2:B100');
n = 1;
newGroup = cell(33,3);
while (n < 98)
    cellVal = randperm(98,1);
    new_name = txt(cellVal);
    newGroup(n) = new_name;
    n = n+1;
    if n == 98
        xlswrite('GroupNames',newGroup)
        disp(newGroup)
    else
        continue
    end
    
end

[Excel Sheet](https://github.com/jmc8427/ICP2017F/blob/master/hw/5/GroupNames.xls)

	2)
	
	A/B: 
	
triggerListUrl = 'http://www.shahmoradi.org/ICP2017F/homework/5-problems/triggers.txt';
TriggerList = webread(triggerListUrl);
TriggerList = strsplit(TriggerList, '\n');

dataDir = './swift/';
mkdir(dataDir);
missingFileCounter = 0;

for i = 1:length(TriggerList)
dataRepos = 'http://www.shahmoradi.org/ICP2017F/homework/5-problems/swift/';
filename = ['GRB', TriggerList{i},'_ep_flu.txt'];
dataURL = [dataRepos, filename];
try
    disp(['Fetching file number: ' , num2str(i)]);
    data = webread(dataURL);
fid = fopen(filename, 'w');
    fprintf(fid,'%s',data);
fclose(fid);
catch
    missingFileCounter = missingFileCounter + 1;
    disp('The requested file does not exist on the web! skipping...');
    disp(['Total number of missing files: ' , num2str(missingFileCounter)]);
end
disp(['Total number of missing files: ' , num2str(missingFileCounter)]);

end

	C:
	
direc = dir('C:\Users\JamesC\Documents\MATLAB\HW5\swift');
counter = 0;
data = [0,0];
    for i = 3:size(direc)
        if direc(i).bytes>0
            currData = readtable(['swift/', direc(i).name]);
            try
                array = table2array(currData);
                if (all(array(:,2)<0.0))
                    data = [data ; table2array(currData)];
                    counter = counter + 1;
                end
            catch
                disp(['No data recognized on file: ', (direc(i).name)]);
            end
        end
    end
scatter(exp(data(:,2)), data(:,1), 1, 'red', 'filled', 'MarkerFaceAlpha', .1, 'MarkerEdgeAlpha', .1);

    title('Plot of E_p_e_a_k vs Fluence for 650 Swift GRB events');
    xlabel('Fluence [ergs/cm^2]');
    set(gca,'xscale','log');
    xlim([1.0000e-08 1.0000e-02]);
    xticks([1.0000e-8 1.0000e-6 1.0000e-4 1.0000e-2]);
    ylabel('E_p_e_a_k');
    set(gca,'yscale','log');
    ylim([1.0000e0 1.0000e04]);
    disp(num2str(counter));
    
    [Scatter Plot](https://github.com/jmc8427/ICP2017F/blob/master/hw/5/fluData.fig)
	


	3)
	
	With the Monte Carlo Problem, it is in your best interest to switch doors, because your odds of winning with your original
	door is just around 33-35%, whereas if you switch, there is a 65-67% chance to win.

rng('shuffle');
nsample = 1000;
winCounter = 0;
oddsOfWin = zeros(nsample,1);
doors = [1,2,3];
for isample = 2:nsample+1
    doorWithCar = randi(3);
    myChoice = randi(3);
    hostChoice = doors(doors~=doorWithCar);
    hostChoice = hostChoice(hostChoice~=myChoice);
    hostChoice = hostChoice(randi(length(hostChoice)));
    if myChoice==doorWithCar
        winCounter = winCounter + 1;
        oddsOfWin(isample) = winCounter/isample;
    else
        oddsOfWin(isample) = oddsOfWin(isample-1);
    end
    disp(['odds of winning by NOT switching:' , num2str(oddsOfWin(isample))]);
end
plot(oddsOfWin)

	[MCHall Graph](https://github.com/jmc8427/ICP2017F/blob/master/hw/5/MCHall.fig)
	
	4)
	
	function plotPiapprox(n)
        x = rand(1,n);
        y = rand(1,n);
figure(); hold on; box on;
X = 0:1e-3:1;
plot(X, sqrt(1-X.^2), 'linewidth', 2, 'color', 'red');
scatter(x, y, 1, 'MarkerFaceAlpha', .15 , 'MarkerEdgeAlpha', .15, 'MarkerFacecolor', 'b', 'MarkerEdgeColor', 'b');

    title('Approximation of Pi');
    xlabel('X');
    xlim([0 1]);
    xticks(1);
    ylabel('Y');
    ylim([0 1]);
    yticks( 1);
end

	[Plot](https://github.com/jmc8427/ICP2017F/blob/master/hw/5/PlotPi.fig)

function output = approxPi(n)
c = 0;
for i = 1:n
    x = rand(1);
    y = rand(1);
    if (x^2 + y^2) <= 1
        c = c + 1;
    end
end
output = 4* (c/n);
disp(num2str(output));
end

approxPi(100000000)
3.142

ans =

    3.1420

	
	
